---
---
- name: Install python before doing any other steps
  hosts: all
  become: yes
  gather_facts: no
  pre_tasks:
    - name: 'install python3'
      raw: sudo apt-get -y update && sudo apt-get -y install python
      register: install_python
      changed_when: >
        not 'python is already the newest version' in install_python['stdout']

  post_tasks:
    - name: Next steps
      debug:
        msg: "Python has now been installed successfully. You are ready to proceed with the next playbook."

#### KEEP PLAYS SEPARATED ####

- name: Setup all hosts with static IPs
  hosts: targets
  gather_facts: true
  pre_tasks:
    - name: Output general host and OS details
      debug:
        msg: >
          "{{ ansible_hostname }} | {{ ansible_host }} | {{ ansible_user }} | {{ ansible_become_pass }} | 
          {{ inventory_hostname }} | {{ inventory_hostname_short }} | 
          {{ os_family }} | {{ os_distro }} | {{ os_codename }} | {{ target_node_arch }}"

  post_tasks:
    - name: Reboot devices (and negotiate new networking profiles)
      shell: sleep 5 && reboot
      async: 1
      poll: 0
    - name: Create in-memory inventory for new 'static_targets' group with hosts with new static ips
      # only runs once for all the hosts in the play; see: https://docs.ansible.com/ansible/2.5/modules/add_host_module.html
      add_host:
        hostname: "{{ hostvars[ item ]['inventory_hostname'] }}"
        groups: [ 'static_targets' ]
        inventory_hostname: "{{ hostvars[ item ]['inventory_hostname'] }}"
        ansible_hostname: "{{ hostvars[ item ]['inventory_hostname'] }}"
        ansible_host: "{{ hostvars[ item ]['host_static_ip'] }}"
        ansible_user: "{{ hostvars[ item ]['ansible_user'] }}"
        ansible_become_pass: "{{ hostvars[ item ]['ansible_become_pass'] }}"
      with_items: "{{ groups['targets'] }}"
    - name: Next steps
      debug:
        msg: "Please confirm that all devices successfully negotiated their respective static IPs. Trying to execute next play now..."
      when: inventory_hostname == groups['targets'][0]

  roles:
    # - role: initialization-tasks
    #   tags: [ initialize ]
    - role: mvrahden/networking-setup
      subtasks: [ interfaces ]
      perform_reboot: false

- name: Test
  hosts: static_targets
  gather_facts: false
  pre_tasks:
    - name: Wait for Reboot
      wait_for_connection:
        connect_timeout: 20
        sleep: 5
        delay: 5
        timeout: 300
    - debug: msg=ansible_[{{ networking_interface_profiles | map(attribute='interface') | difference([ 'lo' ]) | list | join('|') }}]
    - name: Gathering facts
      setup:
        filter: ansible_eth0
    - debug:
        msg: >
          "{{ ansible_hostname }} | {{ ansible_host }} | {{ hostvars[inventory_hostname]['ansible_eth0']['ipv4']['address'] }} | {{ ansible_user }} | {{ ansible_become_pass }} | 
          {{ inventory_hostname }} | {{ inventory_hostname_short }} | 
          {{ os_family }} | {{ os_distro }} | {{ os_codename }} | {{ target_node_arch }}"
  post_tasks:
    - name: Output general host and OS details
      command: cat /etc/hosts
      register: _hostsfile
      changed_when: false
      failed_when: networking_group_domain not in _hostsfile['stdout']
    - name: "'Done' message"
      debug:
        msg: "The playbook has successfully been executed. Your machines are ready for some action now!"
      when: inventory_hostname == groups['static_targets'][0]

  roles:
    - role: mvrahden/networking-setup
      subtasks: [ hostname ]
      networking_group_name: static_targets  # inventory group
    - role: mvrahden/apt-cacher-ng
    - role: mvrahden/ntp
    - role: mvrahden/ssh
    - role: mvrahden/switch-off-interfaces
    - role: mvrahden/swapfile
    - role: pip
    - role: docker
